---
title: "Introductory Shiny"
subtitle: "session 4"
author: "Brendan Clarke"
format: 
    revealjs:
        incremental: true
        logo: "..//src//images//KLN_banner_v05_125.png"
        css: "..//src//images//logo.css"
        embed-resources: true
scrollable: true
smaller: true
execute: 
    echo: true
    eval: false
---
## Session learning outcomes

This is a 'putting it all together' session

+ layout in shiny
+ `shinydashboard`
  + basic syntax 
  + `shinydashboard` menu and sections
  + boxes and valueboxes
+ looking towards a real dashboard


## `fluidRow()` and `column()` 

+ shiny layout is based on a grid
+ nice guidance in the [Shiny docs](https://shiny.posit.co/r/articles/build/layout-guide/)
+ rows and columns
  + 12 is the magic number

. . .

![](../src/images/grid.png)

## Milestone 01
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_01.R
```

## `shinydashboard`

+ it's perfectly possible to do all the layout you'd ever want in base shiny
  + HTML
  + `shiny::tags()`
  + JavaScript
  + `renderUI()`
  + ...
+ but for most of us, the tweaking is slow and painful
+ `shinydashboard` has three major advantages
  + it looks nice without much tweaking
  + it's really easy to use, even if you've not done web development work before
  + it's got some brilliant pre-packed visualisation tools

## `shinydashboard` menu and sections
  
+ Let's start with a minimal shinydashboard `ui()`

## Milestone 02
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_02.R
```

## Basic UI infrastucture

```{verbatim}
dashboardPage(
  dashboardHeader(),
  dashboardSidebar(),
  dashboardBody()
)
```

. . .

![](../src/images/sdb.png){fig-align="center"}


## `shinydashboard` `ui()`

Let's start populating these elements

+ `dashboardHeader()` first
  + add a `title = "whatever you like"`
  + optional `titleWidth` argument to preserve long titles
  + run app and check output

## Milestone 03
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_03.R
```


## `shinydashboard` `ui()`

+ lots of extra options too - drop-down menu example from `?dashboardHeader`

. . .

![](../src/images/menu.png){fig-align="center"}


## `dashboardSidebar()`

This is a bit more complicated than the header, because we need to add some navigation options here.

+ prep work
  + set a `width =`, ideally corresponding with the `titleWidth` value from `dashboardHeader`
  + `collapsed` TRUE/FALSE *au choix*


## Milestone 04
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_04.R
```

  
## `dashboardSidebar()`

+ then add `sidebarMenu()` inside the `dashboardSidebar()`
+ then add a `menuItem()` inside the `sidebarMenu()`. Each `menuItem()` needs:
    + a tab title, for display in the menu
    + `tabName = ` - corresponding to one of the pages that we'll set up next
    + `icon = icon("icon name")` (try `info-circle`)
    
## Milestone 05
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_05.R
```

## Icons...

+ really useful for dashboards, but poorly documented
+ simple cases (like this one), supply a fontawesome icon name inside `icon()`
  + e.g. `icon("info-circle")` becomes `r shiny::icon("info-circle")`
  + `icon("chart-bar")` becomes `r shiny::icon("chart-bar")`
  + `icon("lungs-virus")` becomes `r shiny::icon("lungs-virus")`
  + ...

## Icons...

![](../src/images/icons.png)

and see `src/shiny_icons.qmd`

## `dashboardBody()`

Now we need to add some content to our page

+ `dashboardBody()` containing
  + `tabItems()` containing
    + `tabItem()` containing
      + `tabName = "something"` ‚Üê corresponding to the `menuItem` `tabName`
      + our page content

## Milestone 06
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_06.R
```

## `box()`
+ specific to shinydashboard
+ quick way of putting content on a tile
+ [Nice guidance in the shinydashboard docs](https://rstudio.github.io/shinydashboard/structure.html)

. . .

![](../src/images/boxes.png)

## Milestone 07
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_07.R
```

## `valueBox()`
+ another shinydashboard-specific
+ these can be generated in either `ui()` or `server()`

. . .

![](../src/images/valueboxes.png)

## Milestone 08
```{r}
#| echo: true
#| eval: false
#| file: ../milestones/shiny intro_s04_ms_08.R
```

## Looking towards a real dashboard

+ we'll use the rest of this session looking at a real-ish Shiny dashboard
+ there's an example in the `final_app/` folder
+ please run that now (from the `app.R` script)

## Similarities & differences

+ basically built using the methods described in this course
+ but more complicated
  + plenty to see in `ui.R`
  + almost nothing to see in `server.R`
  + lots of script gubbins in `s04.R`
  + boilerplate only in `app.R`

## Data sources

This uses real data:

. . .
  
  + [PHS delayed discharge bed days by health board](https://www.opendata.nhs.scot/dataset/52591cba-fd71-48b2-bac3-e71ac108dfee/resource/fd354e4b-6211-48ba-8e4f-8356a5ed4215/)
+ [PHS health board names and geography codes](https://www.opendata.nhs.scot/dataset/9f942fdb-e59e-44f5-b534-d6e17229cc7b/resource/652ff726-e676-4a20-abda-435b98dd7bdc)
+ [PHS population estimates](https://www.opendata.nhs.scot/dataset/7f010430-6ce1-4813-b25c-f7f335bdc4dc/resource/27a72cc8-d6d8-430c-8b4f-3109a9ceadb1)

## Getting the data

+ there's a data-processing script in `/R/s03_data.R` that downloads and tidies the data for us
+ this makes four .rds data files from the open data:
  + `data/data.rds` - the main delayed discharge data
  + `data/boards.rds` - a tibble of board names and codes
  + `data/standardised_data.rds` - delayed discharges per capita for the territorial NHS boards
  + `data/standardised_data_national.rds` - delayed discharges per capita, national


## Let's start with the script: `s04.R`
+ lines 1-25 are just package and data loading
  + package loading using `pacman()`
  + set up a vector of data file paths using `here()`
  + reading/making four data files, and a shape file, using `/R/s03_data.R` / `read_rds()`
  
+ then defining four functions
  + `discharge_graph()`
  + `compare_boards()`
  + `stand_compare_boards()`
  + `comp_map()`
  
## Now the `server.R`

+ `source()` the `s04.R` script
+ wrap each of the four functions in `renderPlot(ly)`
+ connect a bunch of inputs to those functions 
 + `input$data`, `input$rate_board_select`, `input$rate_age_select`, `input$date_range`, `input$rate_select`, `input$age_select`, `input$scot_nat_comp`, `input$map_date`, `input$map_age_select`

## Now the `ui.R`

+ plenty to see, but really just repeated building blocks
+ `shinydashboard` with 4 `menuItems`
+ `fluidRow()` and `box()` to organise content
+ `h2()` and `p()` to do heading and text formatting
 + inputs via `dateRangeInput()` / `selectInput()` / `checkboxGroupInput()` / `radioButtons()`
+ revolting messing around to give a bulleted list of links

. . .

```{verbatim}
tags$div(
  tags$ul(
    tags$li(
      tags$a(href = "https://www.opendata.nhs.scot/dataset/52591cba-fd71-48b2-bac3-e71ac108dfee/resource/fd354e4b-6211-48ba-8e4f-8356a5ed4215/", 
            "PHS delayed discharge bed days by health board")
```

## Finishing off

+ [post-session evaluation](https://forms.office.com/e/kRrnr9QeCZ)
+ [*Mastering Shiny*](https://mastering-shiny.org/)
+ Development group

  
 <!-- all milestones included -->
